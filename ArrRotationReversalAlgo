"""
Let AB are the two parts of the input array where A = arr[0..d-1] and B = arr[d..n-1]. The idea of the algorithm is :

Reverse A to get ArB, where Ar is reverse of A.
Reverse B to get ArBr, where Br is reverse of B.
Reverse all to get (ArBr) r = BA.
Example :
Let the array be arr[] = [1, 2, 3, 4, 5, 6, 7], d =2 and n = 7
A = [1, 2] and B = [3, 4, 5, 6, 7]

Reverse A, we get ArB = [2, 1, 3, 4, 5, 6, 7]
Reverse B, we get ArBr = [2, 1, 7, 6, 5, 4, 3]
Reverse all, we get (ArBr)r = [3, 4, 5, 6, 7, 1, 2]
"""

#!/bin/python

import math
import os
import random
import re
import sys

# Complete the dynamicArray function below.
#reversal also for left rotatin 
arr = [1, 2, 3, 4, 5, 6, 7]
d =2
n = len(arr)

def reverseArray(arr, st, en):
    k = st
    temp = arr[st]
    while st < en:
        arr[st] = arr[st+1]
        st=+1
    arr[k] = temp    
    
def leftRotate(arr, d):
    reverseArray(arr, 0, d-1)
    reverseArray(arr, d, n-1)
    reverseArray(arr, 0, n-1)

leftRotate(arr, d) # Rotate array by 2
print arr    
